{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/BooleanFromTokenParser\/parseDataFrom(token:)"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"parseDataFrom"},{"kind":"text","text":"("},{"text":"token","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SoulverCore5TokenV","text":"Token","kind":"typeIdentifier","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Token"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"platforms":["macOS"]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"SoulverCore"}],"role":"symbol","title":"parseDataFrom(token:)","externalID":"s:11SoulverCore22BooleanFromTokenParserV09parseDataD05tokenSbSgAA0E0V_tF","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parseDataFrom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"token","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Token","kind":"typeIdentifier","preciseIdentifier":"s:11SoulverCore5TokenV"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/BooleanFromTokenParser"]]},"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"code":"DataFromTokenParser.parseDataFrom(token:)","type":"codeVoice"},{"type":"text","text":"."}],"variants":[{"paths":["\/documentation\/soulvercore\/booleanfromtokenparser\/parsedatafrom(token:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://app.soulver.core/documentation/SoulverCore/BooleanFromTokenParser/parseDataFrom(token:)":{"title":"parseDataFrom(token:)","abstract":[],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"parseDataFrom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"token","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Token","preciseIdentifier":"s:11SoulverCore5TokenV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":"?","kind":"text"}],"url":"\/documentation\/soulvercore\/booleanfromtokenparser\/parsedatafrom(token:)","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/BooleanFromTokenParser\/parseDataFrom(token:)"},"doc://app.soulver.core/documentation/SoulverCore/BooleanFromTokenParser":{"navigatorTitle":[{"text":"BooleanFromTokenParser","kind":"identifier"}],"type":"topic","role":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/BooleanFromTokenParser","abstract":[],"title":"BooleanFromTokenParser","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BooleanFromTokenParser"}],"url":"\/documentation\/soulvercore\/booleanfromtokenparser"},"doc://app.soulver.core/documentation/SoulverCore":{"abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"title":"SoulverCore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","url":"\/documentation\/soulvercore","type":"topic","kind":"symbol","role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/Token":{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Token","title":"Token","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Token","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Token","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/soulvercore\/token","abstract":[{"text":"A token represents a meaningful element in a math expression (like a number, operator, unit, etc)","type":"text"}],"type":"topic"}}}