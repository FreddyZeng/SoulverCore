{"abstract":[{"type":"text","text":"Add a natural language date scheduling feature to your Mac or iOS calendar or reminders app"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/dateparsing"]}],"metadata":{"roleHeading":"Article","role":"article","title":"Natural language date parsing","modules":[{"name":"SoulverCore"}]},"kind":"article","schemaVersion":{"minor":3,"patch":0,"major":0},"seeAlsoSections":[{"title":"String extensions for quick data parsing","identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing"],"generated":true,"anchor":"String-extensions-for-quick-data-parsing"}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DateParsing","interfaceLanguage":"swift"},"sections":[],"primaryContentSections":[{"content":[{"type":"heading","level":2,"anchor":"Motivation","text":"Motivation"},{"inlineContent":[{"type":"text","text":"Natural language date input features can be found in apps like "},{"isActive":true,"type":"reference","identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/"},{"type":"text","text":", "},{"isActive":true,"type":"reference","identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding"},{"text":" and ","type":"text"},{"isActive":true,"identifier":"https:\/\/www.raycast.com\/extensions\/reminders","type":"reference"},{"type":"text","text":" and make the user experience better."}],"type":"paragraph"},{"text":"Usage","type":"heading","anchor":"Usage","level":2},{"type":"paragraph","inlineContent":[{"code":"SoulverCore","type":"codeVoice"},{"text":" adds a single property ","type":"text"},{"type":"codeVoice","code":"dateValue"},{"text":" to ","type":"text"},{"code":"String","type":"codeVoice"},{"type":"text","text":":"}]},{"code":["public extension String {","   var dateValue: Date?","}"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Use this property to extract the last natural language date found in the string. The ","type":"text"},{"code":"dateValue","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there are no dates in the string."}],"type":"paragraph"},{"level":2,"anchor":"SoulverCore-vs-Foundations-DataDetector","type":"heading","text":"SoulverCore vs Foundation’s DataDetector"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apple’s Foundation framework includes NSDataDetector for detecting dates in strings."}]},{"type":"paragraph","inlineContent":[{"text":"Here is an example:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["let expression = \"March 5th, 2023\"","let types: NSTextCheckingResult.CheckingType = [.date ]","let detector = try! NSDataDetector(types: types.rawValue)","let match = detector.matches(in: expression, options: .init(rawValue: 0), range: NSRange(location: 0, length: expression.count)).first","let date = match?.date"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Compare this to SoulverCore:"}]},{"type":"codeListing","code":["let date = \"March 5th, 2023\".dateValue"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"In addition to a much nicer API, SoulverCore also adds a number of additional features not supported by NSDataDetector."}],"type":"paragraph"},{"anchor":"Supported-Features","text":"Supported Features","type":"heading","level":2},{"text":"Natural language calendar math","type":"heading","level":4,"anchor":"Natural-language-calendar-math"},{"inlineContent":[{"text":"Use natural language phrases like “3 weeks from tomorrow” and “march 12 + 4 weeks 3 days”.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"SoulverCore supports a large range of different natural language date syntaxes. See the ","type":"text"},{"identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","isActive":true,"type":"reference"},{"type":"text","text":" for more examples."}]},{"type":"heading","level":4,"text":"Units & unit shorthands","anchor":"Units--unit-shorthands"},{"inlineContent":[{"type":"text","text":"SoulverCore interprets units of time as referring to a future date after the specified amount of time has passed."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example "},{"type":"codeVoice","code":"2 weeks 2 days"},{"type":"text","text":" will be interpreted as "},{"type":"codeVoice","code":"2 weeks and 2 days"},{"type":"text","text":" "},{"type":"strong","inlineContent":[{"type":"text","text":"from now"}]},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following time unit shorthands are also supported:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"“1y” (1 year)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“5mo” (5 months)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3w” (3 weeks)"}]}]},{"content":[{"inlineContent":[{"text":"“2d” (2 days)","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Shorthands can be combined together:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“12-9 9p” means the “12th of September at 9pm” (in a non-US locale)","type":"text"}]}]}],"type":"unorderedList"},{"text":"Half-formed dates","level":4,"anchor":"Half-formed-dates","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"“3\/12” (Dec 3, or March 12 in the US)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“12.2” (Feb 12 or Dec 2 in the US)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“9-5” (May 9 or Sep 5 in the US)","type":"text"}]}]}]},{"text":"Day & month shorthands","anchor":"Day--month-shorthands","type":"heading","level":4},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“Next mon” (next monday)","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“tod” (today)"}]}]},{"content":[{"inlineContent":[{"text":"“apr3” (April 3)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“yes” (yesterday)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“tom” (tomorrow)","type":"text"}],"type":"paragraph"}]}]},{"text":"AM\/PM shorthands","type":"heading","anchor":"AMPM-shorthands","level":4},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3p” (3pm)"}]}]},{"content":[{"inlineContent":[{"text":"“5a” (5am)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"heading","text":"Random words ignored","level":4,"anchor":"Random-words-ignored"},{"type":"paragraph","inlineContent":[{"text":"SoulverCore extracts the last date present in the given string, and ignores random words before and after it.","type":"text"}]},{"inlineContent":[{"text":"For example, the following are valid inputs:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"“Tom’s birthday party ","type":"text"},{"inlineContent":[{"type":"text","text":"this sunday"}],"type":"strong"},{"text":"”","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“Schedule the meeting for "},{"inlineContent":[{"type":"text","text":"April 21st next year"}],"type":"strong"},{"type":"text","text":"”"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"June 5"}]},{"text":" the kids get off school”","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"text":"Detailed information about the parsed date","level":2,"anchor":"Detailed-information-about-the-parsed-date","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","type":"reference","isActive":true},{"type":"text","text":" enum contains detailed information about the kind of date detected and what date components were explicitly specified."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is how an example of how to get the formatting and components of the detected date:"}]},{"code":["var engineCustomization = EngineCustomization.standard","engineCustomization.featureFlags.seeksFutureDate = true","let calculator = Calculator(customization: engineCustomization)","","if let datestampType = calculator.dateFor(inputDateText)?.result.evaluationResult.datestampValue?.type {","    print(\"Date of type \\(datestampType)\")","}"],"type":"codeListing","syntax":"swift"},{"text":"Performance","anchor":"Performance","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"SoulverCore is very efficient and can perform thousands of date-from-string extractions every second."}]},{"text":"Localizations","level":2,"anchor":"Localizations","type":"heading"},{"inlineContent":[{"type":"text","text":"In addition to English, SoulverCore is localized into German, French, Spanish, Russian & Simplified Chinese."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The user’s system locale will be used for date parsing, and date & time formats specific the particular region are taken into account."}]}],"kind":"content"}],"references":{"https://flexibits.com/fantastical-ios/help/adding":{"identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","titleInlineContent":[{"type":"text","text":"Fantastical"}],"title":"Fantastical","url":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","type":"link"},"https://www.raycast.com/extensions/reminders":{"type":"link","titleInlineContent":[{"type":"text","text":"Raycast"}],"title":"Raycast","url":"https:\/\/www.raycast.com\/extensions\/reminders","identifier":"https:\/\/www.raycast.com\/extensions\/reminders"},"https://documentation.soulver.app/syntax-reference/dates-and-times":{"identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","titleInlineContent":[{"type":"text","text":"Soulver Documentation"}],"title":"Soulver Documentation","url":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","type":"link"},"doc://app.soulver.core/documentation/SoulverCore":{"url":"\/documentation\/soulvercore","kind":"symbol","title":"SoulverCore","abstract":[{"type":"text","text":"A powerful natural language calculation engine"}],"role":"collection","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","type":"topic"},"https://culturedcode.com/things/support/articles/9780167/":{"identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","titleInlineContent":[{"type":"text","text":"Things"}],"title":"Things","url":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","type":"link"},"doc://app.soulver.core/documentation/SoulverCore/DataParsing":{"abstract":[{"type":"text","text":"A declarative & type-safe approach to extracting various data types out of strings"}],"kind":"article","type":"topic","title":"Data from string parsing","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing","role":"article","url":"\/documentation\/soulvercore\/dataparsing"},"doc://app.soulver.core/documentation/SoulverCore/Datestamp/DatestampType":{"abstract":[{"type":"text","text":"The types of datestamps supported by SoulverCore"}],"url":"\/documentation\/soulvercore\/datestamp\/datestamptype","title":"Datestamp.DatestampType","navigatorTitle":[{"text":"DatestampType","kind":"identifier"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DatestampType"}]}}}