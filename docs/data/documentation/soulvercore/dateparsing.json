{"metadata":{"modules":[{"name":"SoulverCore"}],"roleHeading":"Article","role":"article","title":"Natural language date parsing"},"primaryContentSections":[{"kind":"content","content":[{"text":"Motivation","anchor":"Motivation","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Natural language date input features can be found in apps like "},{"identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","type":"reference","isActive":true},{"type":"text","text":", "},{"identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","isActive":true,"type":"reference"},{"type":"text","text":" and "},{"type":"reference","identifier":"https:\/\/www.raycast.com\/extensions\/reminders","isActive":true},{"type":"text","text":" and make the user experience better."}]},{"level":2,"anchor":"Usage","type":"heading","text":"Usage"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"SoulverCore"},{"type":"text","text":" adds a single property "},{"type":"codeVoice","code":"dateValue"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"String"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":"swift","code":["public extension String {","   var dateValue: Date?","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this property to extract the last natural language date found in the string. The "},{"type":"codeVoice","code":"dateValue"},{"type":"text","text":" will be "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if there are no dates in the string."}]},{"level":2,"type":"heading","text":"SoulverCore vs Foundation’s DataDetector","anchor":"SoulverCore-vs-Foundations-DataDetector"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Apple’s Foundation framework includes NSDataDetector for detecting dates in strings."}]},{"inlineContent":[{"text":"Here is an example:","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let expression = \"March 5th, 2023\"","let types: NSTextCheckingResult.CheckingType = [.date ]","let detector = try! NSDataDetector(types: types.rawValue)","let match = detector.matches(in: expression, options: .init(rawValue: 0), range: NSRange(location: 0, length: expression.count)).first","let date = match?.date"]},{"inlineContent":[{"type":"text","text":"Compare this to SoulverCore:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let date = \"March 5th, 2023\".dateValue"]},{"inlineContent":[{"text":"In addition to a much nicer API, SoulverCore also adds a number of additional features not supported by NSDataDetector.","type":"text"}],"type":"paragraph"},{"anchor":"Supported-Features","level":2,"type":"heading","text":"Supported Features"},{"text":"Natural language calendar math","type":"heading","anchor":"Natural-language-calendar-math","level":4},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use natural language phrases like “3 weeks from tomorrow” and “march 12 + 4 weeks 3 days”."}]},{"inlineContent":[{"text":"SoulverCore supports a large range of different natural language date syntaxes. See the ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times"},{"type":"text","text":" for more examples."}],"type":"paragraph"},{"level":4,"anchor":"Units--unit-shorthands","text":"Units & unit shorthands","type":"heading"},{"inlineContent":[{"text":"SoulverCore interprets units of time as referring to a future date after the specified amount of time has passed.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"For example ","type":"text"},{"code":"2 weeks 2 days","type":"codeVoice"},{"type":"text","text":" will be interpreted as "},{"type":"codeVoice","code":"2 weeks and 2 days"},{"type":"text","text":" "},{"inlineContent":[{"text":"from now","type":"text"}],"type":"strong"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The following time unit shorthands are also supported:","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"“1y” (1 year)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“5mo” (5 months)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“3w” (3 weeks)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“2d” (2 days)"}],"type":"paragraph"}]}]},{"inlineContent":[{"type":"text","text":"Shorthands can be combined together:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“12-9 9p” means the “12th of September at 9pm” (in a non-US locale)","type":"text"}]}]}]},{"text":"Half-formed dates","type":"heading","level":4,"anchor":"Half-formed-dates"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Examples:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3\/12” (Dec 3, or March 12 in the US)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“12.2” (Feb 12 or Dec 2 in the US)"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"“9-5” (May 9 or Sep 5 in the US)"}],"type":"paragraph"}]}]},{"type":"heading","level":4,"text":"Day & month shorthands","anchor":"Day--month-shorthands"},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"text":"“Next mon” (next monday)","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“tod” (today)"}]}]},{"content":[{"inlineContent":[{"text":"“apr3” (April 3)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"“yes” (yesterday)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"“tom” (tomorrow)","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"level":4,"text":"AM\/PM shorthands","type":"heading","anchor":"AMPM-shorthands"},{"type":"paragraph","inlineContent":[{"text":"Examples:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“3p” (3pm)"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"“5a” (5am)"}]}]}]},{"text":"Random words ignored","level":4,"anchor":"Random-words-ignored","type":"heading"},{"inlineContent":[{"text":"SoulverCore extracts the last date present in the given string, and ignores random words before and after it.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, the following are valid inputs:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"“Tom’s birthday party ","type":"text"},{"inlineContent":[{"text":"this sunday","type":"text"}],"type":"strong"},{"text":"”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“Schedule the meeting for ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"April 21st next year"}]},{"text":"”","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"“","type":"text"},{"inlineContent":[{"type":"text","text":"June 5"}],"type":"strong"},{"type":"text","text":" the kids get off school”"}]}]}]},{"level":2,"text":"Detailed information about the parsed date","type":"heading","anchor":"Detailed-information-about-the-parsed-date"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"reference","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","isActive":true},{"text":" enum contains detailed information about the kind of date detected and what date components were explicitly specified.","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Here is how an example of how to get the formatting and components of the detected date:"}]},{"type":"codeListing","code":["var engineCustomization = EngineCustomization.standard","engineCustomization.featureFlags.seeksFutureDate = true","let calculator = Calculator(customization: engineCustomization)","","if let datestampType = calculator.dateFor(inputDateText)?.result.evaluationResult.datestampValue?.type {","    print(\"Date of type \\(datestampType)\")","}"],"syntax":"swift"},{"level":2,"type":"heading","text":"Performance","anchor":"Performance"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SoulverCore is very efficient and can perform thousands of date-from-string extractions every second."}]},{"anchor":"Localizations","text":"Localizations","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"In addition to English, SoulverCore is localized into German, French, Spanish, Russian & Simplified Chinese."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"The user’s system locale will be used for date parsing, and date & time formats specific the particular region are taken into account.","type":"text"}]}]}],"abstract":[{"text":"Add a natural language date scheduling feature to your Mac or iOS calendar or reminders app","type":"text"}],"seeAlsoSections":[{"title":"String extensions for quick data parsing","identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing"],"generated":true}],"variants":[{"paths":["\/documentation\/soulvercore\/dateparsing"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore"]]},"kind":"article","identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DateParsing","interfaceLanguage":"swift"},"references":{"https://culturedcode.com/things/support/articles/9780167/":{"title":"Things","identifier":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","titleInlineContent":[{"type":"text","text":"Things"}],"url":"https:\/\/culturedcode.com\/things\/support\/articles\/9780167\/","type":"link"},"https://flexibits.com/fantastical-ios/help/adding":{"titleInlineContent":[{"text":"Fantastical","type":"text"}],"title":"Fantastical","url":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","identifier":"https:\/\/flexibits.com\/fantastical-ios\/help\/adding","type":"link"},"doc://app.soulver.core/documentation/SoulverCore/DataParsing":{"type":"topic","url":"\/documentation\/soulvercore\/dataparsing","title":"Data from string parsing","abstract":[{"type":"text","text":"A declarative & type-safe approach to extracting various data types out of strings"}],"kind":"article","role":"article","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/DataParsing"},"https://www.raycast.com/extensions/reminders":{"identifier":"https:\/\/www.raycast.com\/extensions\/reminders","title":"Raycast","type":"link","titleInlineContent":[{"type":"text","text":"Raycast"}],"url":"https:\/\/www.raycast.com\/extensions\/reminders"},"https://documentation.soulver.app/syntax-reference/dates-and-times":{"titleInlineContent":[{"text":"Soulver Documentation","type":"text"}],"title":"Soulver Documentation","url":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","identifier":"https:\/\/documentation.soulver.app\/syntax-reference\/dates-and-times","type":"link"},"doc://app.soulver.core/documentation/SoulverCore/Datestamp/DatestampType":{"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/Datestamp\/DatestampType","title":"Datestamp.DatestampType","abstract":[{"type":"text","text":"The types of datestamps supported by SoulverCore"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"DatestampType","kind":"identifier"}],"navigatorTitle":[{"text":"DatestampType","kind":"identifier"}],"url":"\/documentation\/soulvercore\/datestamp\/datestamptype"},"doc://app.soulver.core/documentation/SoulverCore":{"kind":"symbol","url":"\/documentation\/soulvercore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","type":"topic","title":"SoulverCore","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"role":"collection"}}}