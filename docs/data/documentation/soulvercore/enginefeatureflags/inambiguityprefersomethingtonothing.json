{"identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/inAmbiguityPreferSomethingToNothing","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/misplacedThousandsSeparatorBehavior","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/timezoneCodeAutocorrectionBehavior","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/functionsRequireParentheses"],"title":"Calculation behavior","generated":true}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"In cases where no valid expression can be detected, SoulverCore will select the last “thing” found in an expression to use as the result. Spotlight-like calculators that use SoulverCore alongside other features should probably turn this off, as you would only want a result when the expression unambiguously produces one.","type":"text"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"inAmbiguityPreferSomethingToNothing","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"On by default."}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/soulvercore\/enginefeatureflags\/inambiguityprefersomethingtonothing"]}],"metadata":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"inAmbiguityPreferSomethingToNothing"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"externalID":"s:11SoulverCore18EngineFeatureFlagsV35inAmbiguityPreferSomethingToNothingSbvp","title":"inAmbiguityPreferSomethingToNothing","role":"symbol","roleHeading":"Instance Property","symbolKind":"property","modules":[{"name":"SoulverCore"}]},"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags"]]},"references":{"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/timezoneCodeAutocorrectionBehavior":{"url":"\/documentation\/soulvercore\/enginefeatureflags\/timezonecodeautocorrectionbehavior","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/timezoneCodeAutocorrectionBehavior","kind":"symbol","title":"timezoneCodeAutocorrectionBehavior","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"timezoneCodeAutocorrectionBehavior","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"TimezoneCodeCorrectionBehavior","preciseIdentifier":"s:11SoulverCore30TimezoneCodeCorrectionBehaviorO"}],"abstract":[{"text":"TimeZones are defined by a fixed offset from GMT, however some timezones are only used during certain times of the year (like a daylight savings time zone: NZST, BRST, etc).","type":"text"}],"role":"symbol","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/inAmbiguityPreferSomethingToNothing":{"url":"\/documentation\/soulvercore\/enginefeatureflags\/inambiguityprefersomethingtonothing","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/inAmbiguityPreferSomethingToNothing","kind":"symbol","title":"inAmbiguityPreferSomethingToNothing","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"inAmbiguityPreferSomethingToNothing","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"abstract":[{"text":"In cases where no valid expression can be detected, SoulverCore will select the last “thing” found in an expression to use as the result. Spotlight-like calculators that use SoulverCore alongside other features should probably turn this off, as you would only want a result when the expression unambiguously produces one.","type":"text"}],"role":"symbol","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags":{"role":"symbol","abstract":[{"text":"Customize the behavior of SoulverCore’s parser with these flags & enums","type":"text"}],"type":"topic","title":"EngineFeatureFlags","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags","url":"\/documentation\/soulvercore\/enginefeatureflags","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"EngineFeatureFlags"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"EngineFeatureFlags"}]},"doc://app.soulver.core/documentation/SoulverCore":{"abstract":[{"type":"text","text":"A powerful natural language calculation engine"}],"title":"SoulverCore","url":"\/documentation\/soulvercore","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore"},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/misplacedThousandsSeparatorBehavior":{"url":"\/documentation\/soulvercore\/enginefeatureflags\/misplacedthousandsseparatorbehavior","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/misplacedThousandsSeparatorBehavior","kind":"symbol","title":"misplacedThousandsSeparatorBehavior","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"misplacedThousandsSeparatorBehavior","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MisplacedThousandsSeparatorBehavior","preciseIdentifier":"s:11SoulverCore35MisplacedThousandsSeparatorBehaviorO"}],"abstract":[{"text":"Customize how SoulverCore interprets numbers with “misplaced” thousands separators","type":"text"}],"role":"symbol","type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/EngineFeatureFlags/functionsRequireParentheses":{"url":"\/documentation\/soulvercore\/enginefeatureflags\/functionsrequireparentheses","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/EngineFeatureFlags\/functionsRequireParentheses","kind":"symbol","title":"functionsRequireParentheses","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"functionsRequireParentheses"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"abstract":[{"text":"With this flag on, SoulverCore will require “classic” C-style functions use parentheses, i.e. sin(30)","type":"text"},{"type":"text","text":" "},{"text":"With this flag off, SoulverCore supports single parameter functions without parenthesis, like “sin 30”, “floor 10.3”, etc","type":"text"}],"role":"symbol","type":"topic"}}}