{"sections":[],"metadata":{"modules":[{"name":"SoulverCore"}],"roleHeading":"Instance Property","symbolKind":"property","title":"prerequisiteTypes","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prerequisiteTypes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SoulverCore12TokenTypeSetV","text":"TokenTypeSet","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:11SoulverCore14CustomFunctionV17prerequisiteTypesAA12TokenTypeSetVSgvp"},"kind":"symbol","identifier":{"url":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/prerequisiteTypes","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"A property you can set to ensure this function is never scanned for unless the types in this set are present in the TokenList"}],"hierarchy":{"paths":[["doc:\/\/app.soulver.core\/documentation\/SoulverCore","doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prerequisiteTypes"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11SoulverCore12TokenTypeSetV","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/TokenTypeSet","kind":"typeIdentifier","text":"TokenTypeSet"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"This is not technically necessary to set, but can save us never even generating a prototype sequence (which involves parsing the prototype expression), unless there is the faintest possiblity of actually matching","type":"text"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/soulvercore\/customfunction\/prerequisitetypes"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://app.soulver.core/documentation/SoulverCore":{"type":"topic","title":"SoulverCore","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore","url":"\/documentation\/soulvercore","kind":"symbol","abstract":[{"text":"A powerful natural language calculation engine","type":"text"}],"role":"collection"},"doc://app.soulver.core/documentation/SoulverCore/CustomFunction/prerequisiteTypes":{"abstract":[{"type":"text","text":"A property you can set to ensure this function is never scanned for unless the types in this set are present in the TokenList"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"prerequisiteTypes"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11SoulverCore12TokenTypeSetV","kind":"typeIdentifier","text":"TokenTypeSet"},{"kind":"text","text":"?"}],"role":"symbol","type":"topic","title":"prerequisiteTypes","url":"\/documentation\/soulvercore\/customfunction\/prerequisitetypes","kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction\/prerequisiteTypes"},"doc://app.soulver.core/documentation/SoulverCore/CustomFunction":{"navigatorTitle":[{"text":"CustomFunction","kind":"identifier"}],"role":"symbol","url":"\/documentation\/soulvercore\/customfunction","abstract":[{"text":"A custom function is a phrase with a syntax you come up with and a block to provide a result given some parameters","type":"text"}],"identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/CustomFunction","kind":"symbol","title":"CustomFunction","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CustomFunction"}],"type":"topic"},"doc://app.soulver.core/documentation/SoulverCore/TokenTypeSet":{"url":"\/documentation\/soulvercore\/tokentypeset","title":"TokenTypeSet","role":"symbol","kind":"symbol","identifier":"doc:\/\/app.soulver.core\/documentation\/SoulverCore\/TokenTypeSet","navigatorTitle":[{"text":"TokenTypeSet","kind":"identifier"}],"abstract":[{"type":"text","text":"A set of token types"}],"type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"TokenTypeSet","kind":"identifier"}]}}}